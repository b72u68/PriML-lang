structure Compile =
struct

exception Compile of string

type file = string

type input = file list * file

val basefiles = ["$(SML_LIB)/basis/basis.mlb",
                 "$(SML_LIB)/basis/mlton.mlb",
                 (* "../x/graphics.mlb", *)
                 "$(SML_LIB)/basis/schedulers/interactive-pprio.mlb"]

val mlton = "~/mlton-parmem-copy/build/bin/mlton-parmem"
val opts = ["-default-ann 'allowFFI true'", "-cc-opt -g"]

fun build_mlb file (deps, comp) =
    let val fs = basefiles @ deps @ [comp]
        val s = String.concatWith "\n" fs
    in
        StringUtil.writefile file s
    end

fun build_cmd mlb morefiles out opts =
    mlton ^ " " ^ (String.concatWith " " opts) ^ " -output " ^ out ^ " " ^
    mlb ^ " " ^ morefiles

fun compile inp morefiles out moreopts =
    (let val mlbname = "temp.mlb"
         val _ = build_mlb mlbname inp
         val cmd = build_cmd mlbname morefiles out (opts @ moreopts)
         val _ = print (cmd ^ "\n")
         val stat = OS.Process.system cmd
     in
         if OS.Process.isSuccess stat then
             ()
         else raise (Compile "mlton-parmem returned failure")
     end)
    handle OS.SysErr (s, _) =>
           raise (Compile ("unable to run mlton-parmem: " ^ s))

end
